---
title: "İskele Stok Analizi"
format: 
  html: 
    df-print: kable
editor: visual
---

## Libraries

```{r}
#| message: false
#| warning: false
library(readxl)
library(tidyverse)

```

## Data Import

```{r}

sales <- 
  read_excel("data/satis.xls") |> 
  set_names(c("year_month", "product_name", "quantity", "net_amount"))

stock <- 
  read_excel("data/stok.xls") |> 
  set_names(
    c("Barkod","UrunGrup","UrunAltGrup","UrunAd","Stok","Marka","Firma","KDV","PSF","ToplamPSF","DF","ToplamDF","Maliyet_KDVsiz","TopMaliyet_KDVsiz","Maliyet_KDVli","TopMaliyet_KDVli")
  )

```

## First Trials for joining

simplified stock data

```{r}
stock_short <- 
  stock |> 
    select(4,5,15) |> 
    set_names(c("product_name","stock_quantity","unit_cost"))


```

monthly_sales

```{r}

duration <-yday(today())-1

monthly_sales <-
  sales |> 
    pivot_wider(
      names_from = year_month,
      values_from = c(quantity,net_amount)
    ) |> 
    mutate(
      quantity = rowSums(across(c(2, 3, 4, 5)), na.rm = TRUE)/duration*30,
      amount = rowSums(across(c(6, 7, 8, 9)), na.rm = TRUE)/duration*30
    ) |> 
    select(product_name,quantity,amount) |> 
    filter(!is.na(product_name)) |> 
    mutate(
      quantity=ceiling(quantity),
      amount=ceiling(amount)
    )
```

joining sales data to stock data

```{r}

combined_data <- stock_short  |> 
  left_join(monthly_sales, by = "product_name") |> 
  set_names(c("product","stock_quantity","unit_cost","sold_quantity","sold_amount"))

```

## data wrangling

burada aşağıdaki mantıkla bir data oluşturuldu.

1.  iki aylık ihtiyaçtan daha fazla stoklar fazla stok olarak ele alınır.
2.  fazla stoğun maliyeti hesaplandı.

```{r}
excess_stock <- combined_data |> 
  mutate(
    inventory_days = stock_quantity/sold_quantity*30,
    excess_stock =stock_quantity-2*sold_quantity,
    excess_stock_cost=excess_stock*unit_cost
  )
```

## Data Analysis

Burada iki ayrı analiz yapılıyor. Birincisi bu yıl içinde satışı olan ancak elimizde iki aydan fazla yetecek kadar olan ürünler. Bunlarda stok fazlası iki aydan sonrası olarak hesaplandı. İkincisi, şaşırtıcı şekilde, bu yıl içinde hiç satışı olmayan ürünlerin stokları. Bunların tamamı stok fazlası olarak hesaplandı.

### Bu yıl içinde satışı olan ürünler

Toplam Stok Fazlasının Maliyeti

```{r}
tot_excess_st_cost <- 
  excess_stock |> 
    filter(excess_stock_cost>0) |> 
    summarise(tot_excess_st_cost=sum(excess_stock_cost)) |> 
    pull(tot_excess_st_cost)

tot_excess_st_cost
```

Stok Fazlası Maliyeti En Yüksek 10 Ürün

```{r}
excess_stock |> 
  filter(excess_stock_cost>0) |> 
  arrange(-excess_stock_cost) |> 
  head(10) |> 
  mutate(ratio=excess_stock_cost/tot_excess_st_cost)
```

### Bu yıl hiç satılmamış ama stokta fazla olan ürünler

```{r}
unsold_products  <- 
  excess_stock |> 
    filter(is.na(sold_quantity)) |> 
        select(1:3) |> 
    mutate(excess_stock_cost=stock_quantity*unit_cost)

unsold_products |> head()
```

Satılmayan Ürünlerin Toplam Stok Fazlasının Maliyeti

```{r}
unsold_products_tot_excess_st_cost <- 
  unsold_products |> 
    filter(!is.na(unit_cost)) |> 
    summarise(tot_excess_st_cost=sum(excess_stock_cost)) |> 
    pull(tot_excess_st_cost)

unsold_products_tot_excess_st_cost
```

kategori ekle

```{r}
unsold_products_with_category <- 
  unsold_products |> 
  left_join(stock, by = c("product"="UrunAd")) |> 
  select(1,2,3,4,6) 

```

analiz

```{r}
unsold_products_with_category|> 
  group_by(UrunGrup) |> 
  summarise(Sum=sum(excess_stock_cost)) |> view()
```

Dermokozmetik ilk 10 ürün

```{r}
unsold_products_with_category |> 
  filter(UrunGrup=="DERMOKOZMETİK") |> 
  arrange(-excess_stock_cost) |> 
  head(10)
```

İlaç ilk 10 ürün

```{r}
unsold_products_with_category |> 
  filter(UrunGrup=="İLAÇ") |> 
  arrange(-excess_stock_cost) |> 
  head(10)
```
